/* Generated by           cobc 3.2.0 */
/* Generated from         C:\msys64\home\lopez\COBOL\matrices\buscarEnMatriz.cbl */
/* Generated at           Jul 19 2025 19:32:36 */
/* GnuCOBOL build date    Nov 27 2024 17:43:47 */
/* GnuCOBOL package date  Jul 28 2023 17:02:56 UTC */
/* Compile command        C:\msys64\mingw64\bin\cobc.exe -x -I C:\msys64\home\lopez\COBOL\matrices/includes -g -fmf -o buscarEnMatriz.exe C:\msys64\home\lopez\COBOL\matrices\buscarEnMatriz.cbl */


/* Module path */
static const char		*cob_module_path = NULL;

/* Number of call parameters */
static int		cob_call_params = 0;

/* Attributes */

static const cob_field_attr a_1 =	{0x21,   0,   0, 0x1000, NULL};
static const cob_field_attr a_2 =	{0x10,   1,   0, 0x0000, NULL};
static const cob_field_attr a_3 =	{0x10,   2,   0, 0x0000, NULL};
static const cob_field_attr a_4 =	{0x10,   3,   0, 0x0000, NULL};


/* Constants */
static const cob_field c_1	= {24, (cob_u8_ptr)"Saliendo del programa...", &a_1};
static const cob_field c_2	= {34, (cob_u8_ptr)"Opcion invalida, intente de nuevo.", &a_1};
static const cob_field c_3	= {27, (cob_u8_ptr)"------MENU PRINCIPAL-------", &a_1};
static const cob_field c_4	= {23, (cob_u8_ptr)"1. Dimensionar Matrices", &a_1};
static const cob_field c_5	= {31, (cob_u8_ptr)"2. Cargar elementos en Matrices", &a_1};
static const cob_field c_6	= {17, (cob_u8_ptr)"3. Sumar Matrices", &a_1};
static const cob_field c_7	= {39, (cob_u8_ptr)"4. Buscar elementos iguales en Matrices", &a_1};
static const cob_field c_8	= {8, (cob_u8_ptr)"5. Salir", &a_1};
static const cob_field c_9	= {28, (cob_u8_ptr)"Ingrese una opción (1-5):  ", &a_1};
static const cob_field c_10	= {35, (cob_u8_ptr)"Ingrese cantidad de filas (max 10):", &a_1};
static const cob_field c_11	= {41, (cob_u8_ptr)"Error: el numero debe estar entre 1 y 10.", &a_1};
static const cob_field c_12	= {38, (cob_u8_ptr)"Ingrese cantidad de columnas (max 10):", &a_1};
static const cob_field c_13	= {29, (cob_u8_ptr)"Cargando matrices de tamaño ", &a_1};
static const cob_field c_14	= {1, (cob_u8_ptr)"x", &a_1};
static const cob_field c_15	= {47, (cob_u8_ptr)"Ingrese elementos de la primera matriz(0-1000):", &a_1};
static const cob_field c_16	= {10, (cob_u8_ptr)"Elemento [", &a_1};
static const cob_field c_17	= {1, (cob_u8_ptr)",", &a_1};
static const cob_field c_18	= {8, (cob_u8_ptr)"] de M1:", &a_1};
static const cob_field c_19	= {51, (cob_u8_ptr)"Ingrese los elementos de la segunda matriz(0-1000):", &a_1};
static const cob_field c_20	= {8, (cob_u8_ptr)"] de M2:", &a_1};
static const cob_field c_21	= {33, (cob_u8_ptr)"Resultado de la suma de matrices:", &a_1};
static const cob_field c_22	= {3, (cob_u8_ptr)"M3[", &a_1};
static const cob_field c_23	= {4, (cob_u8_ptr)"] = ", &a_1};
static const cob_field c_24	= {40, (cob_u8_ptr)"Elementos iguales en la misma posicion: ", &a_1};
static const cob_field c_25	= {10, (cob_u8_ptr)"Posicion [", &a_1};
static const cob_field c_26	= {2, (cob_u8_ptr)", ", &a_1};


#define cob_nop	if (!module) cob_nop


static int COB_INLINE COB_A_INLINE
cob_get_numdisp (const void *data, const int size)
{
	register const unsigned char	*p = (const unsigned char *)data;
	register int	n;
	register int	val = 0;
	for (n = 0; n < val; ++n, ++p) {
		if (*p > '0' && *p <= '9')
			break;
	}
	for (n = 0; n < size; ++n, ++p) {
		val = (val * 10)
		    + (*p & 0x0F);
	}
	return val;
}

